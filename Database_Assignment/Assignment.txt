Create a table named tblEmp and insert some data by using following script:

CREATE TABLE [dbo].[tblEmp](
    [ntEmpID] [bigint] IDENTITY(1,1) NOT NULL PRIMARY KEY,
    [vcName] [varchar](100) NULL,
    [vcMobieNumer] [varchar](15) NULL,
    [vcSkills] [varchar](max) NULL,
    [moSalary] [money] DEFAULT(0) NOT NULL,
    [ntLevel] [bit] DEFAULT(0) NOT NULL
)

--Inserting demo data
INSERT [dbo].[tblEmp] VALUES 
    ('Scott','123-456-3456','CF,HTML,JavaScript',50,0),
    ('Greg',NULL,'HTML5,JavaScript,Jquery',80,0),
    ('David','123-456-3458','Sql,JavaScript',30,1),																							
    ('Alan','123-456-3459','C#,VB,XQuery',60,1),
    ('Jhon',NULL,'XML,HTML',80,1),
    ('Alan','123-456-3461','Sql,Oracle,DB2',70,1)
        

Assignment:

/* SELECT Clause  */

1. Write a single sql query with following information's:

a. Total number number of employees

b. Minimum salary received by any employees.
c. Total distinct ntLevel
select COUNT(ntEmpId), MIN(moSalary),COUNT(DISTINCT(ntLevel)) from dbo.tblEmp
            
/* FROM clause */

2. Correct this query:

    SELECT [ntEmpID], E.[vcName],tblEmp.[vcMobieNumer] 
    FROM tblEmp E
select E.ntEmpId,E.vcName,E.vcMobileNumber from dbo.tblEmp E 
        
/* WHERE clause */
        
3. Write a single select query which satisfies the following conditions:
    a. If any employee does not have a phone number then select that employee if ntLevel  equal to 1
    b. else select those employees whose ntLevel is equal to 0 
select * from dbo.Table_2 where vcMobileNumberTemp!=NULL AND ntLevelTemp = 1
UNION select * from dbo.Table_2 where vcMobileNumberTemp!=NULL AND ntEmpIdTemp=0;  
            
/*  ORDER BY clause */

4.  Write a sql query which displays those employee data first, who knows javascript.
Select * from dbo.Table_2
ORDER BY
(CASE WHEN vcSkillsTemp LIKE '%JavaScript%'  THEN 0 ELSE 1 END), vcSkillsTemp
        
/* TOP  clause */
    
5. Explain the TOP clause in the following sql queries?
    
    a. SELECT TOP(1) * FROM tblEmp - returns top 1
    b. SELECT TOP(SELECT 3/2) * FROM tblEmp - return top 1
    c. SELECT TOP(1) PERCENT * FROM tblEmp - return top 1% 
    d. SELECT TOP(1) WITH TIES * FROM tblEmp ORDER BY vcName - returns multiple rows with same value
        
/* GROUP BY/HAVING I know we did not discuss this, but do if you can!*/
Group By - group rows that have same values and used with aggregate functions
Having - Having clause is used because we can not use aggregate function in where clause

6. When I executed this query:
           
   SELECT [vcName],[vcMobieNumer] FROM [dbo].[tblEmp] GROUP BY [vcName]
           
    I got following error message:
    Column 'dbo.tblEmp.vcMobieNumer' is invalid in the select list because it is not contained in either an aggregate function or the GROUP BY clause.
SELECT [vcName],Count([vcMobieNumer]) FROM [dbo].[tblEmp] GROUP BY [vcName]

    Can you explain above error message? Write at least two possible solutions. 
        
7. Write a sql query to get the ntLevel of the employees getting salary greater than average salary.
select ntLevel from dbo.tblEmp where moSalary>(select AVG(moSalary) from dbo.tblEmp)
          
Do the following questions using AdventureWorks DB
-------------------------------------------------------
8. Write a query to get the count of employees with a valid Suffix 
select CONCAT('Number of employees',' ',(select COUNT(Name) from HumanResources.Department));

9. Using BusinessEntityAddress table (and other tables as required), list the full name of people living in the city of Frankfurt.
select concat(A.FirstName,' ',A.MiddleName,' ',A.LastName) as FullName from Person.Person A INNER JOIN Person.BusinessEntityAddress B ON A.BusinessEntityID=B.BusinessEntityID  INNER JOIN Person.Address C ON  B.AddressID = C.AddressID WHERE C.City = 'Frankfurt'


10. "Single Item Order" is a customer order where only one item is ordered. Show the SalesOrderID and the UnitPrice for every Single Item Order.
select SalesOrderID,UnitPrice from Sales.SalesOrderDetail where OrderQty = 1

11. Show the product description for culture 'fr' for product with ProductID 736.

12. Show OrderQty, the Name and the ListPrice of the order made by CustomerID 635
select P.ListPrice,S.OrderQty,P.Name from Production.Product P INNER JOIN  Sales.SalesOrderDetail S ON P.ProductID = S.ProductID INNER JOIN Sales.SalesOrderHeader O ON S.SalesOrderID = O.SalesOrderID WHERE O.CustomerID = 635 

13. How many products in ProductSubCategory 'Cranksets' have been sold to an address in 'London'?

14. Describe Char, Varchar and NVarChar datatypes with examples. 
char-takes 1 byte per character
     storage type - n bytes
varchar- takes 1 bytes per character
         storage type - actual length 
NVarchar- takes 2 bytes per character
          storage type - 2 times of actual length
